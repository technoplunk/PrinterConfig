# VORON2 300mm config

# This is a base printer.cfg file for the VORON2 printer and matches the manual/build guide exactly
# for controllers used (dual RAMPS) and pin layout for all connected components.
# Created by "Boff" with help from the VORON community.

# For other build sizes, controllers, or non-standard pin connections, please see
# https://github.com/mzbotreprap/VORON/tree/master/Firmware/Klipper/Voron_2.1/Klipper/Configurations
# for other example Klipper configs created by the VORON community.

# This file is only an example - be sure to review and update it
# according to the specifics of your printer. See the example.cfg and
# example-extras.cfg files for a description of available Klipper parameters.

# AND PLEASE READ THROUGH THE KLIPPER DOCUMENTATION FIRST!
# https://github.com/KevinOConnor/klipper/tree/master/docs

# *** THINGS TO CHANGE/CHECK: ***
# Arduino paths                         [mcu] section
# Thermistor types                      [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
# FSR switch (z endstop) location       [homing_override] section
# FSR switch (z endstop) offset for Z0  [stepper_z] section
# Probe points                          [quad_gantry_level] section
# Min & Max gantry corner postions      [quad_gantry_level] section
# PID tune                              [extruder] and [heater_bed] sections
# Fine tune E steps                     [extruder] section

# Differences from a default Voron config:
#   Hall-effect XY Endstop
#   PT100 for hotend monitoring
#   Extra thermistor for the edge of the bed
#   Extra thermistor for chamber

[mcu]
# Mcu for X/Y/E steppers
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__Arduino_Mega_2560_8543836313935150C1D0-if00
#   Obtain definition by "ls -l /dev/serial/by-id/"
pin_map: arduino
restart_method: arduino

[mcu z]
# Mcu for Z steppers
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__Arduino_Mega_2560_85438363139351609090-if00
#   Obtain definition by "ls -l /dev/serial/by-id/"
pin_map: arduino
restart_method: arduino

[printer]
# settings below are the max and can't be commanded over in gcode
kinematics: corexy
max_velocity: 350
max_accel: 3000
max_z_velocity: 50
max_z_accel: 350
#square_corner_velocity: 10.0
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The default is 5mm/s.

# Set because of issues printing 80t with pausing and blobbing
buffer_time_high=15

[virtual_sdcard]
path: ~/.octoprint/uploads/

[stepper_x]
# B Stepper. Back left.
step_pin: ar54
dir_pin: !ar55
enable_pin: !ar38
#   X on mcu_xye
step_distance: 0.0125
#   80 steps per mm - 1.8 deg - 1/16 microstepping
endstop_pin: ^!ar2
#   X_MAX on mcu_xye
position_min: 0
position_endstop: 307
position_max: 308
homing_speed: 100
homing_positive_dir: true
homing_retract_dist: 5

[stepper_y]
# A Stepper. Back right.
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
#   Y on mcu_xye
step_distance: 0.0125
#   80 steps per mm - 1.8 deg - 1/16 microstepping
endstop_pin: ^!ar15
#   Y_MAX on mcu_xye
position_min: -10
position_endstop: 300
position_max: 305
homing_speed: 100
homing_positive_dir: true
homing_retract_dist: 5

[stepper_z]
# Z0 Stepper - Front Left
step_pin: z:ar54
dir_pin: !z:ar55
enable_pin: !z:ar38
#   X on mcu_z
step_distance: 0.00250
#   400 steps per mm - 1.8 deg - 1/16 microstepping
# FSR switch on mcu_z X max endstop pin
endstop_pin: ^z:ar15
# position endstop is to set your Z offset
#position_endstop: 1.21
position_max: 305
position_min: -25
homing_speed: 15.0
second_homing_speed: 3.0
homing_retract_dist: 3.0

[stepper_z1]
# Z1 Stepper - Rear Left
step_pin: z:ar60
dir_pin: z:ar61
enable_pin: !z:ar56
#   Y on mcu_z
step_distance: 0.00250
#   400 steps per mm - 1.8 deg - 1/16 microstepping

[stepper_z2]
# Z2 Stepper - Rear Right
step_pin: z:ar46
dir_pin: !z:ar48
enable_pin: !z:ar62
#   Z on mcu_z
step_distance: 0.00250
#   400 steps per mm - 1.8 deg - 1/16 microstepping

[stepper_z3]
# Z3 Stepper - Front Right
step_pin: z:ar26
dir_pin: z:ar28
enable_pin: !z:ar24
#   E0 on mcu_z
step_distance: 0.00250
#   400 steps per mm - 1.8 deg - 1/16 microstepping

[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
#   E0 on mcu_xye
# Extrude 100mm, measure. Then plug into equation: step_distance * measured / 100
#step_distance:0.001876
step_distance: 0.001851
#   555 steps per mm - 1.8 deg - 1/16 microstepping (Mobius2)
nozzle_diameter: 0.400
# PA can be disabled by declaring a 0.0 value
pressure_advance: 1.0542
pressure_advance_smooth_time: 0.040
#   A time range (in seconds) to use when calculating the average
#   extruder velocity for pressure advance. A larger value results in
#   smoother extruder movements. This parameter may not exceed 200ms.
#   This setting only applies if pressure_advance is non-zero. The
#   default is 0.040 (40 milliseconds).
filament_diameter: 1.750
max_extrude_only_distance: 10000.0
#   This is set high to allow the load/unload filament macros to run
heater_pin: ar10
sensor_type: PT100 INA826
# PT100 Sensor pin is different from regular thermistor
sensor_pin: analog3
smooth_time: 1.0
min_extrude_temp: 0
min_temp: 0
max_temp: 300

[probe]
# Inductive Probe
pin: ^z:ar19
#   Z_MAX on mcu_z
x_offset: 0.0
y_offset: 25.0
# Detection distance from bed
#z_offset: 2.075
speed: 25.0
samples = 1
sample_retract_dist = 6.0
#   How far to retract (in mm) from the probe point for multi-probe samples

[fan]
# Print cooling fan
pin: ar9
#   D9 on mcu_xye
max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.
shutdown_speed: 0
#   The desired fan speed (expressed as a value from 0.0 to 1.0) if
#   the micro-controller software enters an error state. The default
#   is 0.
cycle_time: 0.010
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
hardware_pwm: false
#   Enable this to use hardware PWM instead of software PWM. The
#   default is False.
kick_start_time: 0.500
#   Time (in seconds) to run the fan at full speed when first enabling
#   it (helps get the fan spinning). The default is 0.100 seconds.
#   See the "fan" section in example.cfg for a description of the
#   above parameters.

[heater_fan hotend_fan]
# Hotend fan
pin: z:ar9
#   D9 on mcu_z
kick_start_time: 0.500
heater: extruder
heater_temp: 50.0
fan_speed: 0.6

[heater_fan controller_fan]
# Controller fan
pin: z:ar10
#   D10 on mcu_z
kick_start_time: 0.500
heater: heater_bed
heater_temp: 45.0

[heater_fan exhaust_fan]
# Exhaust fan
pin: z:ar8
#   D8 on mcu_z
kick_start_time: 0.500
heater: heater_bed
heater_temp: 60.0
fan_speed: 0.0

[heater_bed]
heater_pin: z:ar11
#   D11 (servo) on mcu_z
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: z:analog15
#   T2 on mcu_z
smooth_time: 3.0
max_power: 0.66
min_temp: 0
max_temp: 110

# Heater and temperature sensor verification. Heater verification is
# automatically enabled for each heater that is configured on the
# printer. Use verify_heater sections to change the default settings.
# Due to large temp swing on print cooling fan I've changed this
# to stop mid print heater faults.
[verify_heater extruder]
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by when approaching a new target temperature. The default is 2.
check_gain_time: 40
#   The amount of time (in seconds) that the heating_gain must be met
#   in before an error is raised. The default is 20 seconds for
#   extruders and 60 seconds for heater_bed.
hysteresis: 10
#   The difference between the target temperature and the current
#   temperature for the heater to be considered within range of the
#   target temperature. The default is 5.
max_error: 600
#   The maximum temperature difference a heater that falls outside the
#   target temperature range may accumulate before an error is
#   raised. For example, if the target temperature is 200, the
#   hysteresis is 5, the max_error is 120, and the temperature is
#   reported at 185 degrees for 12 seconds then an error would be
#   raised (or 24 seconds at 190, or 120 seconds at 194, etc.). The
#   default is 120.

[temperature_sensor chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: analog13
min_temp: 0
max_temp: 100
gcode_id: C 

[temperature_sensor bed_edge_temp]
sensor_type: ATC Semitec 104GT-2
sensor_pin: z:analog14
gcode_id: T1

# Safe Z homing. One may use this mechanism to home the Z axis at a
# specific XY coordinate. This is useful if the toolhead, for example
# has to move to the center of the bed before Z can be homed.
[safe_z_home]
home_xy_position: 204,302
#   A X,Y coordinate (e.g. 100,100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home coordinate.
#   The default is 50 mm/s
z_hop: 5.0
#   Lift the Z axis prior to homing. This is applied to any homing command,
#   even if it doesn't home the Z axis. If the Z axis is already homed and
#   the zhop would exceed the printer limits, the zhop is ignored. If a lift
#   has already been performed or the Z axis is known to be equally or higher
#   than this distance, the zhop is ignored. After homing Z completed, the
#   printhead is lifted to zhop, respecting the probe's z_offset.
#   The default is 0.0mm.
z_hop_speed: 20.0
#   Speed at which the Z axis is lifted prior to homing. The default is 20mm/s.
#move_to_previous: False
#   When set to True, xy are reset to their previous positions after z homing.
#   The default is False.

#    this is required for gantry leveling and replaces your G28 command
#    with the gcode used here.  Used to home X/Y/Z with mechanical switches
#[homing_override]
#axes: z
#set_position_z: 0
#gcode:
#    G90
# Raise Z 5mm to avoid hitting FSR on XY home if gantry is close to the bed
#    G0 Z5 F3000
# Home XY axis
#    G28 X Y
# Move to FSR Position
#    G0 X208 Y303 F6000
# Home Z axis
#    G28 Z
# Move Z up
#    G0 Z10 F3000

#    quad_gantry_level is to put a moving gantry into plan with
#    a fixed bed.  Must have 4 steppers on the gantry
#    use QUAD_GANTRY_LEVEL to level a gantry.
[quad_gantry_level]
#   Use QUAD_GANTRY_LEVEL to level a gantry.
gantry_corners:
    -60,2
    360,380

#   Min & Max gantry corners - measure from nozzle at MIN (0,0) and MAX (250,250) to respective belt positions
points:
    40,25
    40,200
    275,200
    275,25
#   Probe points
speed: 300
horizontal_move_z: 10
max_adjust: 6
#   Saftey limit if an adjustment greater than this value is requested
#   quad_gantry_level will abort.
retries: 10
#   number of times to retry if the stepper movements aren't within tolerance
retry_tolerance: 0.0075
#   if retries are enabled then retry if any z_stepper movement was greater
#   than the retry_tolerance

[display]
# RepRapDiscount 128x64 Full Graphic Smart Controller
lcd_type: st7920
cs_pin: z:ar16
sclk_pin: z:ar23
sid_pin: z:ar17
#   LCD connector on mcu_z
menu_timeout: 40
encoder_pins: ^z:ar31, ^z:ar33
click_pin: ^!z:ar35
kill_pin: ^!z:ar41

#[display]
#mini
#lcd_type: uc1701
#cs_pin: z:ar17
#sclk_pin: z:P1.15
#sid_pin: z:P1.16
#a0_pin: z:ar16
#encoder_pins: ^z:ar31, ^z:ar33
#click_pin: ^!z:ar35
#contrast: 63

#[output_pin lcd_R]
#pin: z:ar25
#pwm: True
#value: 0
#cycle_time: 0.001

#[output_pin lcd_G]
#pin: z:ar27
#pwm: True
#value: 0
#cycle_time: 0.001

#[output_pin lcd_B]
#pin: z:ar29
#pwm: True
#value: 1
#cycle_time: 0.001

[output_pin buzzer]
pin: ar37

[idle_timeout]
# 10 minutes idle time out
gcode:
    G0 X125 Y245 F6000
    M84
# 2 hours
timeout: 7200
# 5 hours
#timeout: 18000
# 72 hours
#timeout: 259200

#    use BED_MESH_CALIBRATE to create a bed mesh.
[bed_mesh]
speed: 100
horizontal_move_z: 10
min_point: 20,5
max_point: 280,260
probe_count: 5,5
fade_start: 1.0
fade_end: 10.0
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2,2
algorithm: bicubic 
#   The interpolation algorthm to use.  May be either "langrange"
#   or "bicubic".  This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algoritm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.
relative_reference_index: 12

[filament_switch_sensor my_sensor]
pause_on_runout: True
insert_gcode:
    M117 Insert Detected
runout_gcode:
    M117 Runout Detected
    M600
    M400
switch_pin: ^!ar19

[skew_correction]

[include macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.800
#*# pid_ki = 1.117
#*# pid_kd = 137.640
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 43.182
#*# pid_ki = 1.358
#*# pid_kd = 343.284
#*#
#*# [stepper_z]
#*# position_endstop = 0.880
#*#
#*# [probe]
#*# z_offset = 2.000
#*#
#*# [skew_correction voron_21]
#*# xy_skew = -0.00262601228858
#*# xz_skew = 0.00156184763043
#*# yz_skew = 0.000283850742325
#*#
#*# [bed_mesh default]
#*# points =
#*# 	0.070000, 0.037500, 0.005000, -0.002500, 0.060000
#*# 	0.085000, 0.045000, 0.010000, 0.010000, 0.075000
#*# 	0.095000, 0.042500, 0.000000, -0.005000, 0.072500
#*# 	0.087500, 0.032500, -0.012500, -0.015000, 0.070000
#*# 	0.070000, 0.030000, -0.022500, -0.010000, 0.067500
#*# x_count = 5
#*# y_count = 5
#*# min_x = 20.0
#*# max_x = 280.0
#*# min_y = 5.0
#*# max_y = 260.0
#*# x_offset = 0.0
#*# y_offset = 25.0
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh ABS]
#*# points =
#*# 	0.070000, 0.037500, 0.005000, -0.002500, 0.060000
#*# 	0.085000, 0.045000, 0.010000, 0.010000, 0.075000
#*# 	0.095000, 0.042500, 0.000000, -0.005000, 0.072500
#*# 	0.087500, 0.032500, -0.012500, -0.015000, 0.070000
#*# 	0.070000, 0.030000, -0.022500, -0.010000, 0.067500
#*# x_count = 5
#*# y_count = 5
#*# min_x = 20.0
#*# max_x = 280.0
#*# min_y = 5.0
#*# max_y = 260.0
#*# x_offset = 0.0
#*# y_offset = 25.0
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
